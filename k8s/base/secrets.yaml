# Kubernetes Secrets for AI Printer
# NOTE: In production, use external secret management (e.g., AWS Secrets Manager, HashiCorp Vault)
# These are template values that should be replaced with actual secrets

apiVersion: v1
kind: Secret
metadata:
  name: ai-printer-secrets
  namespace: ai-printer
type: Opaque
stringData:
  # Database Credentials
  DB_PASSWORD: "REPLACE_WITH_SECURE_PASSWORD"
  
  # Redis Password
  REDIS_PASSWORD: "REPLACE_WITH_REDIS_PASSWORD"
  
  # Application Secrets
  SECRET_KEY: "REPLACE_WITH_SECRET_KEY"
  JWT_SECRET_KEY: "REPLACE_WITH_JWT_SECRET"
  
  # OpenAI API Key
  OPENAI_API_KEY: "REPLACE_WITH_OPENAI_KEY"
  
  # Google OAuth Credentials
  GOOGLE_CLIENT_ID: "REPLACE_WITH_GOOGLE_CLIENT_ID"
  GOOGLE_CLIENT_SECRET: "REPLACE_WITH_GOOGLE_CLIENT_SECRET"
  
  # Monitoring Credentials
  GRAFANA_PASSWORD: "REPLACE_WITH_GRAFANA_PASSWORD"
  FLOWER_USER: "admin"
  FLOWER_PASSWORD: "REPLACE_WITH_FLOWER_PASSWORD"

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: ai-printer
type: Opaque
stringData:
  POSTGRES_DB: "ai_printer_db"
  POSTGRES_USER: "ai_printer"
  POSTGRES_PASSWORD: "REPLACE_WITH_POSTGRES_PASSWORD"
  POSTGRES_REPLICATION_USER: "replicator"
  POSTGRES_REPLICATION_PASSWORD: "REPLACE_WITH_REPLICATION_PASSWORD"

---
# TLS Certificate Secret (replace with actual certificate)
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: ai-printer
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Base64 encoded private key